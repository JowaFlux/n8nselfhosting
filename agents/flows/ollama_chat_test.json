{
  "name": "Ollama Chat Test v3.0 (HTTP-Fallback + Robust)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chat",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "webhook",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "url": "http://ollama:11434/api/generate",
        "method": "POST",
        "jsonParameters": true,
        "bodyParametersJson": "{\"model\":\"llama3.2\",\"prompt\":\"{{$json.body.message || $json.message || 'Sag kurz: pong'}}\",\"stream\":false}",
        "options": {
          "timeout": 120000,
          "retryOnFail": true,
          "maxRetries": 3,
          "retryInterval": 2000
        }
      },
      "id": "http_ollama",
      "name": "HTTP→Ollama (Fallback)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [460, 300]
    },
    {
      "parameters": {
        "functionCode": "function deepFindText(x){const seen=new WeakSet(),out=[];\n  (function walk(v){ if(v&&typeof v==='object'){ if(seen.has(v))return; seen.add(v);\n    if(typeof v.response==='string'&&v.response.trim()) out.push(v.response);\n    if(typeof v.text==='string'&&v.text.trim()) out.push(v.text);\n    if(typeof v.message==='string'&&v.message.trim()) out.push(v.message);\n    if(typeof v.content==='string'&&v.content.trim()) out.push(v.content);\n    if(Array.isArray(v.choices)&&v.choices[0]){\n      const m=v.choices[0].message||v.choices[0].text||v.choices[0].content;\n      if(typeof m==='string'&&m.trim()) out.push(m);\n    }\n    for(const k in v) walk(v[k]);\n  } else if(typeof v==='string'){ const s=v.trim();\n    if(s.length>=3 && !/^(\\{|\\[|https?:\\/\\/)/i.test(s)) out.push(s);\n  }})(x);\n  const uniq=[...new Set(out)];\n  uniq.sort((a,b)=>(/\\.\\s*$/.test(b)?1:0)-(/\\.\\s*$/.test(a)?1:0)||b.length-a.length);\n  return uniq[0]||''; }\nconst text = deepFindText($json||{});\nreturn [{ json: { response: text || \"✅ Lauf ok, aber kein lesbarer Modelltext.\" } }];"
      },
      "id": "function",
      "name": "Map Response v2 (Robust)",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "respond",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "HTTP→Ollama (Fallback)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP→Ollama (Fallback)": {
      "main": [
        [
          {
            "node": "Map Response v2 (Robust)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map Response v2 (Robust)": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "all",
    "saveDataErrorExecution": "all"
  },
  "staticData": null
}
